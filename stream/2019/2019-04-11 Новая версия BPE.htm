<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>2019-04-11</title>
    <link rel="stylesheet" href="https://forms.n2o.dev/priv/static/css/forms.css?v=1" />
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2019-04-11</a>
</nav>
<main>
    <section>
        <h3>Новая версия BPE 4.4</h3>

         <p>BPE — это легковесная система управления бизнес-процессов созданная для
            встраивания в эрланг приложения, на которой написана страница
            депозитов <a href="https://pb.ua/depozit">pb.ua/depozit</a>. Как вы знаете
            мы давно обещали Open Source Банк как демо приложение на N2O стеке, которое
            использует не только NITRO, но и FORMS и BPE — систему документооборота
            и управления бизнес-процессами — святой грааль бизнес девелопмента.
            По счастливой случайности я когда-то писал master thesis на эту тему,
            поэтому у меня на руках пару формальных моделей и несколько
            имплементаций (.NET, Erlang). BPE — это топчик который работает по-сути
            на голом gen_server, а в качестве хранения трейсов процессов использует
            двухсвязные списки (KVX), которые могут хранится в любых базах.
            Тут мы опишем апрельские модификациии (кодовое название VARNA),
            которые были проспонсированы компанией Quanterall. [Если всё пойдет хорошо,
            то возможно мы расширим присутствие N2O стека на Elixir,
            проект <a href="https://github.com/o73">O73</a>]</p>

         <p>— <a href="https://github.com/synrc/bpe">github.com/synrc/bpe</a> — 4.4<br></p>

         <p>Кодовое название этой версии VARNA, так как коммиты были сделаны в этом
            городе в офисе компании Quanterall; мы планируем с ними в будущем выполнить
            порт на Elixir платформу, благодаря чему распространим присутствие BPE и других продуктов SYNRC
            на Elixir экосистему тоже.</p>

        <h3>Нововведения</h3>

         <h4>Совместимость с MIX и REBAR3</h4>

         <p>Тут пришлось возвратиться с {tag,master} так как rebar3 не понимает [], на который мы перешли в MAD.
            Теперь все библиотеки работают и с MAD, и с REBAR3 и c MIX. В следующих версиях появится
            поддержка родного Elixir приложения топлевела, которое будет импортировать через Record.extract
            основные схемы SYNRC стека.</p>

        <h4>Апрельский ролаут</h4>

         <p>Вместе с BPE обновлена целая серия приложений, так как BPE использует
            атоматический JSON генератор (json-bert.js) через BERT приложении, и требудет модифицированнную версию MAD,
            которая за один проход генерирует файл и компилирует его. Также была обновлена библиотека FORMS,
            сердце генераратора форм.</p>
         <p>
         — <a href="https://forms.n2o.dev">synrc/forms</a> — 4.4<br>
         — <a href="https://nitro.n2o.dev">synrc/nitro</a> — 4.4<br>
         — <a href="https://ws.n2o.dev">synrc/n2o</a> — 6.4<br>
         — <a href="https://mad.n2o.dev">synrc/mad</a> —5.4</p>
         </p>

        <h4>Автогенерируемые формы</h4>

        <p>В системах управлеиня бизнес-процессами (СУБП) притяно использовать
           максимально декларативную модель описания, поэтому для каждого шага
           можно и нужно перечислить список документов или сообщений которые
           тригерят конкретный переход на конкретном шаге управляющего FSM.
           Для этого в BPE добавилось поле <b>prompt</b> в котором мы будем хранить список документов,
           которые должны быть правильно заполнены для успешного прохождения конкретного шага.</p>

        <p>Раньше использовались автономные контроллеры, для каждого BPE бизнес процесса
           писался сопроводиельная NITRO страница которая им управляла как веб-контроллер.
           Я говорил, что это хуйня, потому, что надо написать абстрактный формо-генерпатор
           и спрашивать только документы, прописанные в prompt и таким образом можно построить систему,
           где не нужно будет вручную писать веб-контроллеры процессов. Поле prompt — первый шаг
           на пути к этому процессу, в следующих версиях будет представлен универсальный адмнистративный
           редктор управления бизнес процесом, например, как контрольный элемент <b>#bpe{}</b> библиотеки NITRO.</p>

        <h4>Админка на NITRO</h4>

        <p>В этой версии появилась <a href="https://bank-1.n2o.space:8041/app/actors.htm">простая админка на NITRO</a>, которая
           позволяет пока только создавать процессы и проклацывать их структуру. Отдельная простенькая страничка
           для трейсов процессов, которая в банке, например, будет историей транзакций по счету.</p>
        <h4>Визуальные редакторы графов</h4>
         <p>BPE — это система управления процессами DEVELOPER FIRST (девелоперы сами поддерживают декларативные символьные
            и графические описания). Потому, что мы считаем,
            что декларативный формальный синтаксис лучше чем графическая нотация. Графическую нотацию мы не отменяем
            и планируем генерировать визуальное изображение FSM процесса с помощью автоматического лейаута.
            Не многие существующие редакторы такое умеют. Но, допустим мы сами научились делать аутлейаут внешинимм
            препроцессорами, тогда вторая фича которая множественно отсутствует в существующих редакторах —
            это возможно навешивать теги на сущности, переходы, документы, и не просто теги, а возможно туда
            вписывать правила в определенной BNF нотации, по которой можно было бы сгенерировать и код и данные,
            например, те же документы, необходимые для заполненния на текущем шаге. Таким образом существует целый
            класс параметров, которые в разных местах должны задаваться в графическом редакторе. Осилить такие
            требования можно только сев и написав все самому. Поэтому <a href="https://bpmn.io">BPMN.io</a> и еще ряд
            других графических редакторов отпал. К тому если и делать, что-то стоящее то как минимум
            не хуже чем в Corezoid, а там красивые кривые были. Похожие красивые кривые сделали наши друзья из Казани
            на сайте <a href="https://bot-crm.ru">bot-crm.ru</a> (на N2O и NITRO кстати!).</p>
          <figure>
         <img src="https://pbs.twimg.com/media/D3ioP6bWwAAznn9?format=jpg" width=600></figure>
         <p>В общем графический редактор — это отдельный большой незакрытый гештальт!
            Надеемся, что в ближайшее время что-то у нас должно появится!</p>
        <h4>Новые примеры бизнес-процессов</h4>
        <p>Что-то бы показать фундаментальную важность бизнес-процессов, как молотка которым можно всё забивать
           покажем вам, как можно вместо ERP сущности IBAN счет, можно ввести понятия бесконечного процесса,
           как банковского счета, где каждый аменд или шаг выполнения — это транзакция, которая либо переводит
           между аккаунтами банка либо задействует коннекторы и шлюзы в фиат и биткоины.</p>
        <figure><img src="https://bpe.n2o.dev/man/img/diagram-3.svg"></figure>
        <p>Такая фундаментилизация бизнес-процессов хорошее упражнение для энтепрайз долбоебов, которые
           не знают с чего начинать ассесмент. Начинать надо с самого главного, того процесса который
           приносит бабки и где спрятан весь биллинг. Все остальное над этим процессом — это его объязка:
           открытие счета, закрытие, пополнение, снятие, и трансфер как управляющие аменды.</p>
        <p>В будущем полноценный рабочий опен соурс банк ждите по этому адресу:</p>
        <p>— <a href="https://fin.erp.uno">erpuno/fin</a> — 4.4</p>
       <h4>JSON API</h4>
        <p>Для поддержи привычного представление бизнес-объектов в виде JSON на стороне
           клиента используется библиотека BERT:</p>
        <p>— <a href="https://rpc.n2o.dev">synrc/rpc</a></p>
        <p>С помощью специального parse_transform генерируется JavaScript SDK для всех
           рекордов описаных в type spec. Как же пользоваться и проверить что всё работает?
           Смотрите как проверить прямо в браузере. Заходите на <a href="https://fin.erp.uno/login.htm">bank.n2o.dev</a>
           или <a href="https://fin.erp.uno/login.htm">bpe.n2o.dev</a> и открывайте JavaScript консоль:</p>
         <figure><code>
 > $io.do = function(r) { console.log(decode(r)); };
         </code></figure>
         <p>теперь можете послать инициализирующий маркер, чтоб перерисовать страницу и вызвать NITRO метод event(init).</P>
         <figure><code>
 > ws.send('N2O,');
         </code></figure>
         <figure><code>
 {tup: "io",
  code: "var x = qi('stand'); ... ",
  data: {tup: "Token",
         data: "db3b5bc4fd9a59907f12def5c77fb868d5
                b35cb22c9756f182…7d29875bb699ba05c
                69614e4930da39da127bfb43e698bd10"}}</code></figure>

         <p>Убедитесь в том, что вы создали хотя бы один процесс перед выполнением оперции загрузки процесса #load{id=1}:</P>
         <figure><code>
 > ws.send(enc(encode({tup:'load',id:1})));
         </code></figure>
         <figure><code>
 {"tup":"io",
  "data":{"tup":"process",
          "id":1,
          "container":"feed",
          "feed_id":"process",
          "next":2,
          "name":"IBAN Account",
          "tasks":[{"tup":"userTask","name":"Init","module":"bpe_account"},
                   {"tup":"userTask","name":"Upload","module":"bpe_account"},
                   {"tup":"userTask","name":"Signatory","module":"bpe_account"},
                   {"tup":"serviceTask","name":"Payment","module":"bpe_account"},
                   {"tup":"serviceTask","name":"Process","module":"bpe_account"},
                   {"tup":"endEvent","name":"Final","module":"bpe_account"}],
          "events":[{"tup":"messageEvent","name":"PaymentReceived"}],
          "flows":[{"tup":"sequenceFlow","source":"Init","target":"Upload"},
                   {"tup":"sequenceFlow","source":"Upload","target":"Payment"},
                   {"tup":"sequenceFlow","source":"Payment","target":["Signatory","Process"]},
                   {"tup":"sequenceFlow","source":"Process","target":["Process","Final"]},
                   {"tup":"sequenceFlow","source":"Signatory","target":["Process","Final"]}],
           "docs":[{"0":"tx","tup":"$"}],"task":"Process","started":"nonode@nohost"}}
         </code></figure>
         <p>Кстати обертка N2O протокола вокруг BPE <a href="https://github.com/synrc/bpe/blob/master/src/protos/bpe_n2o.erl#L9-L15">занимает 7 строчек</a>.
            Автоматический маршалинг параметров позволяет нам автоматическую публикацию RPC сервисов по шине,
            как в SOAP и старом добром энтерпрайзе! К микросервис-безумию и GRPC мы тоже готовы, его мы тоже генерируем
            и даже присутствуем на официальной странице <a href="https://github.com/grpc-ecosystem/awesome-grpc">awesome-grpc</a>.
            Пользуясь случаем хочется передать привет всем долбоебам которыве используют GRPC у себя в производстве!
            Напоминаю что GPB либа Томаса Абрамсона на Эрланге занимает 80 000 строк кода, а наш генератор 140.</p>
        <h3>Планы на будущее</h3>
        <p>Во-первых все нововведения будут развиваться в новых версия, так как эти модификации ещё не закончены.
           Из нетронутого, но запланированного можно выделить:</p>
       <h4>Amend per History record 4.5</h4>
       <p>Нужно отскейлить словарь бизнес-процесса на случай для долгоживущих процессов, когда трейс
       может сожрать гигабайты памяти, поэтому надо в хистори писать только дельты, т.е. сами транзакции.
           Это требует некоторой переаботки системы хранения.</p>
       <h4>KVX back-end 4.6</h4>
        <p>Нужно перейти из KVS на более новую и минималистичную библиотеку KVX. Возможно перейти с gen_server на N2O-шный новый n2o_pi.
           Я согласен перейти на что угодно, что позволит повысить формальность и сократит размер.</p>
    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>

</body>
</html>
