<html>
<head>
    <meta charset="utf-8"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <meta name="description" content=""/>
    <meta name="author" content="Namdak Tonpa"/>
    <title>2019-07-08</title>
    <link rel="stylesheet" href="https://n2o.dev/blank.css" />
    <link rel="stylesheet" href="../../journal.css" />
</head>
<body>
<nav>
    <a href='../../index.html'>5HT</a>
    <a href='../index.html'>TOP</a>
    <a href='#'>2019-07-08</a>
</nav>
<main>
    <section>
        <h3>Часть 4. Администратор данных</h3>

        <p>— <a href="2019-06-30%20DEPOT.htm">Часть 1. Введение</a><br>
           — <a href="2019-07-01%20ERP%20MOD.htm">Часть 2. Общая структура</a><br>
           — <a href="2019-07-08%20ERP%20BOOT.htm">Часть 3. Первичные цепочки</a><br>
           — <a href="2019-07-08%20KVS%20ADM.htm">Часть 4. Администратор данных</a><br>
           — <a href="2019-07-09%20BPE%20ADM.htm">Часть 5. Администратор процессов</a><br>
           — <a href="2019-07-17%20ENT%20APP.htm">Часть 6. Структура приложения</a><br>
           — <a href="2019-07-19%20ENT%20PUB.htm">Часть 7. Публикация в GCP</a></p>

        <p>В этой статье я расскажу как написать простую админку для KVS
           на NITRO и N2O на 5 строчек!.</p>

    </section>
    <section>
    <h3>Постановка задачи</h3>
    <h3>Cтраницы</h3>
    <h4>KVS.Index</h4>
    <figure><img src="https://tonpa.guru/stream/2019/ent/2.png"/></figure>
 
    <figure><code>
  def event(:init)
  def event(:writers)
  def event({:link,id})
  def event(:user)
  def event(:session)
  def event(:enode))
    </code></figure>

    <p>Красным цветом выделены идентификаторы DOM элементов, которые заменяются
       на пререндереные на сервере куски HTML сниппетов. Как это происходит
       в Live View и даже PHP! Но в отличии от и использования <a href="https://tonpa.guru/stream/2013/2013-02-28%20Suck%20and%20Blow.htm">Suck and Blow</a>
       нотации для темплейт энжинов, таких как ASP, PHP, EEX, DTL и других,
       NITRO предлает встраивание в хост язык или глубокое встаивание HTML5 в Erlang в данном случае
       и является фреймворком находящимя в своём классе:
       OCaml Ocsigen, Scala Lift, SML UrWeb, F# WebSharper, Erlang Nitrogen.
       Основная идея — пишем все на одном языке и обучать новичков надо одному языку причем
       сразу показывая как писать на нем веб приложения, которые и так все понимают как писать.</p>

       <h4>priv/static/kvs.htm</h4>
   <figure><code>
&lt;nav&gt;
  &lt;a href='login.htm'&gt;LOGIN&lt;/a&gt;
  &lt;a href='plm.htm'&gt;PLM&lt;/a&gt;
  &lt;a href='bpe.htm'&gt;BPE&lt;/a&gt;
  &lt;a href='form.htm'&gt;FORM&lt;/a&gt;
  &lt;a href='kvs.htm'&gt;KVS&lt;/a&gt;
&lt;/nav&gt;

&lt;aside&gt;
  &lt;article&gt;
    &lt;section&gt;
      &lt;h2&gt;KVS&lt;/h2&gt;
      &lt;p&gt;Abstract chain database&lt;/p&gt;
      &lt;div&gt;USER: &lt;span id=<font color=red>user</font>&gt;&lt;/span&gt;
            SSD: &lt;span id=<font color=red>disc</font>&gt;&lt;/span&gt;
            RAM: &lt;span id=<font color=red>ram</font>&gt;&lt;/span&gt;&lt;br&gt;
        SESSION: &lt;span id=<font color=red>session</font>&gt;&lt;/span&gt;
             VM: &lt;span id=<font color=red>enode</font>&gt;&lt;/span&gt;&lt;/div&gt;
    &lt;/section&gt;
    &lt;div class=container&gt;
      &lt;div&gt;&lt;h2&gt;WRITERS&lt;/h2&gt;
      &lt;div id=<font color=red>writers</font>&gt;&lt;/div&gt;&lt;/div&gt;
      &lt;div&gt;&lt;h2&gt;CHAINS&lt;/h2&gt;
      &lt;div id=<font color=red>feeds</font>&gt;To display the chain
              select the writer.&lt;/div&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/article&gt;
&lt;/aside&gt;
    </code></figure>

    <h4>lib/events/kvs.ex</h4>

   <figure><code>
defmodule <font color=red>KVS.Index</font> do
  use N2O, with: [:n2o, :nitro]
  use FORM
  use KVS
  require ERP
  require Logger

  def parse(ERP."Employee"(person:
            ERP."Person"(cn: name))),
  do: name
  def parse(_), do: []

  def event(:init),
    do:
      [<font color=red>:user</font>, <font color=red>:writers</font>, <font color=red>:session</font>, <font color=red>:enode</font>]
      |> Enum.map(fn x ->
       [ NITRO.clear(x),
         send(self(), {:direct, x})] end)

  def event(<font color=red>:user</font>),
  do: NITRO.update(<font color=red>:user</font>,
      span(body: parse(:n2o.user())))

  def event(<font color=red>:session</font>),
  do: NITRO.update(<font color=red>:session</font>,
      span(body: :n2o.sid()))

  def event(<font color=red>:enode</font>),
  do: NITRO.update(<font color=red>:enode</font>,
      span(body: NITRO.compact(:erlang.node())))

  def event({:link, i}),
  do: [
      NITRO.clear(<font color=red>:feeds</font>),
      :kvs.feed(i) |> Enum.map(fn t ->
        NITRO.insert_bottom(:feeds,
          panel(body: NITRO.compact(t))) end)
    ]

  def event(<font color=red>:writers</font>),
    do:
      :writer
      |> :kvs.all()
      |> :lists.sort()
      |> Enum.map(fn writer(id: i, count: c) ->
        NITRO.insert_bottom(
          :writers,
          panel(body:
          [link(body: i, postback: {:link, i}),
           ' (' ++ NITRO.to_list(c) ++ ')']))
      end)

  def event(_), do: []

  def ram(os), do: NITRO.compact(os)
end
    </code></figure>

   <h3>Роутер</h3>
   <p>
kvs — KVS.Index<br>
    </p>

    </section>
    <section>

    <p>Код приложения можно найти в следующих репозиториях:</p>
    <p>— <a href="https://github.com/erpuno/plm">erpuno/plm</a></p>
    </section>
</main>
<footer>Namdak Tonpa <span class="heart">&nbsp;❤&nbsp;</span> 2009—2019</footer>
</body>
</html>
